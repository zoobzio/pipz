name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Test pipz core
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
    
    - name: Test examples
      run: |
        for dir in examples/*/; do
          echo "Testing $dir"
          (cd "$dir" && go test -v -race)
        done
    
    - name: Upload coverage
      if: matrix.go-version == '1.23'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.txt

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.61.0  # Pin version for consistency
        args: --config=.golangci.yml --timeout=5m
        skip-cache: false
        skip-save-cache: false
    
    - name: Security Report
      if: always()
      run: |
        golangci-lint run --config=.golangci.yml --out-format=json > lint-report.json || true
        echo "### Security Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "Linters with findings:" >> $GITHUB_STEP_SUMMARY
        jq -r '.Issues[] | .FromLinter' lint-report.json 2>/dev/null | sort | uniq -c | sort -nr >> $GITHUB_STEP_SUMMARY || echo "No issues found âœ…" >> $GITHUB_STEP_SUMMARY

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Run benchmarks
      run: |
        cd benchmarks
        go test -bench=. -benchmem -benchtime=1s | tee benchmark_results.txt
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: benchmarks/benchmark_results.txt

  demos:
    name: Demo Validation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
    
    - name: Run demos
      run: |
        cd demos
        go run . validation
        go run . payment
        go run . security
        go run . transform